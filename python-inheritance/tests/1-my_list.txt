===========================
How to Use 1-mylist.py
===========================

This module defines a list of integers using the `MyList` class.

===========================
# main file: 
#!/usr/bin/python3
MyList = __import__('1-my_list').MyList

my_list = MyList()
my_list.append(1)
my_list.append(4)
my_list.append(2)
my_list.append(3)
my_list.append(5)
print(my_list)
my_list.print_sorted()
print(my_list)

===========================
# MyList class definition:
#!/usr/bin/python3
"""
contains the MyList class
"""

class MyList(list):
    """a subclass of list"""
    def __init__(self):
        """initialize the object"""
        super().__init__()

    def print_sorted(self):
        """print the sorted list"""
        print(sorted(self))


Checking for module docstring:
    >>> m = __import__("1-my_list").__doc__
    >>> len(m) > 1
    True

Checking for class docstring:
    >>> c = __import__("1-my_list").MyList.__doc__
    >>> len(c) > 1
    True

Checking for method docstring:
    >>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
    >>> len(mod) > 1
    True

Checking that MyList inherits from list:
    >>> MyList = __import__('1-my_list').MyList
    >>> issubclass(MyList, list)
    True

Checking that appending works and printing the list:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Checking for sorted order after print_sorted:
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Checking for empty list:
    >>> empty_list = MyList()
    >>> empty_list.print_sorted()
    []

Checking for negative numbers:
    >>> my_list.append(-1)
    >>> my_list.append(-10)
    >>> print(my_list)
    [1, 4, 2, 3, 5, -1, -10]
    >>> my_list.print_sorted()
    [-10, -1, 1, 2, 3, 4, 5]
